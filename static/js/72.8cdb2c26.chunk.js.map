{"version":3,"file":"static/js/72.8cdb2c26.chunk.js","mappings":"mRAEaA,EAAmBC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sMAiB7BC,EAAeH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oDCjB9B,SAASG,EAA0BC,GAExC,OADoBA,EAAKC,QAAQ,mBAAoB,QAEvD,C,aCyCA,EAvCgB,WACd,IAAAC,GAAsBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3BI,EAAGF,EAAA,GAAEG,EAAMH,EAAA,GACVI,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAgBb,GAAS,KAAD,EAAAQ,EAAAE,EAAAI,KAA1CL,EAAOD,EAAPC,QAERV,EAAOU,GAASC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEhBM,QAAQC,IAAGP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,kBARiB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAUlBjB,GACF,GAAG,CAACH,KAGFqB,EAAAA,EAAAA,KAACpC,EAAgB,CAAAqC,SACbxB,EAAIyB,QAGJF,EAAAA,EAAAA,KAAA,MAAAC,SACGxB,EAAI0B,KAAI,SAAAC,GAAgD,IAA7CC,EAAED,EAAFC,GAAIC,EAAOF,EAAPE,QAA2BC,EAAIH,EAAtBI,eAAkBD,KACnCE,EAAuBH,EDhCFlC,QAAQ,kBAAmB,ICiCtD,OACEsC,EAAAA,EAAAA,MAAA,MAAAT,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKM,KACLP,EAAAA,EAAAA,KAAA,KAAAC,SAAI/B,EAA0BuC,OAFvBJ,EAKb,OAXFL,EAAAA,EAAAA,KAAChC,EAAY,CAAAiC,SAAC,+BAgBtB,C","sources":["components/Reviews/Reviews.styled.js","servises/textFormater.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsContainer = styled.div`\n  width: 80%;\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 35px;\n  }\n  h3 {\n    color: #f33f3f;\n    margin-bottom: 15px;\n  }\n  p {\n    color: #ebe4e4;\n  }\n`;\n\nexport const Notification = styled.h2`\n  text-align: center;\n  color: #f33f3f;\n`;\n","export const textFormat = text => text.replace(/<\\/?[^>]+(>|$)/g, '');\n\nexport function addSpacesBetweenSentences(text) {\n  let formattedText = text.replace(/([.!?])\\s*([^])/g, '$1 $2');\n  return formattedText;\n}\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'servises/api';\nimport { ReviewsContainer, Notification } from './Reviews.styled';\nimport { textFormat, addSpacesBetweenSentences } from 'servises/textFormater';\n\nconst Reviews = () => {\n  const [rev, setRev] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fatchReviews = async () => {\n      try {\n        const { results } = await getMovieReviews(movieId);\n\n        setRev(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fatchReviews();\n  }, [movieId]);\n\n  return (\n    <ReviewsContainer>\n      {!rev.length ? (\n        <Notification> Sorry! No reviews found.</Notification>\n      ) : (\n        <ul>\n          {rev.map(({ id, content, author_details: { name } }) => {\n            const solidText = textFormat(content);\n            return (\n              <li key={id}>\n                <h3>{name}</h3>\n                <p>{addSpacesBetweenSentences(solidText)}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsContainer","styled","_templateObject","_taggedTemplateLiteral","Notification","_templateObject2","addSpacesBetweenSentences","text","replace","_useState","useState","_useState2","_slicedToArray","rev","setRev","movieId","useParams","useEffect","fatchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getMovieReview","results","_context","prev","next","getMovieReviews","sent","t0","console","log","stop","apply","arguments","_jsx","children","length","map","_ref2","id","content","name","author_details","solidText","_jsxs"],"sourceRoot":""}